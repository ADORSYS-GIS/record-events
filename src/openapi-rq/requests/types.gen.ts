// This file is auto-generated by @hey-api/openapi-ts

/**
 * Event annotation with strict typing - matches TypeScript EventAnnotation
 */
export type EventAnnotation = {
    labelId: string;
    timestamp: string;
    value: FieldValue;
};

/**
 * Media data with proper typing - matches TypeScript EventMedia
 */
export type EventMedia = {
    data: string;
    lastModified: number;
    name: string;
    size: number;
    type: MediaType;
};

/**
 * Event metadata - matches TypeScript structure
 */
export type EventMetadata = {
    createdAt: string;
    createdBy?: string | null;
    source: EventSource;
};

/**
 * Complete event package - matches TypeScript EventPackage
 */
export type EventPackage = {
    annotations: Array<EventAnnotation>;
    id: string;
    media?: (EventMedia) | null;
    metadata: EventMetadata;
    version: string;
};

/**
 * Simple event payload from frontend - file upload notification
 */
export type EventPayload = {
    contentType: string;
    filename: string;
};

/**
 * Event source types - matches TypeScript
 */
export type EventSource = 'web' | 'mobile';

/**
 * Supported field value types - matches TypeScript FieldValue
 */
export type FieldValue = string | number | boolean | {
    [key: string]: unknown;
} | null;

/**
 * Response for event hash verification
 */
export type HashVerificationResponse = {
    blockNumber?: number | null;
    exists: boolean;
    hash: string;
    timestamp?: string | null;
};

/**
 * Health check response
 */
export type HealthResponse = {
    services: ServiceHealthStatus;
    status: string;
    timestamp: string;
    version: string;
};

/**
 * Supported media types - matches TypeScript MediaType
 */
export type MediaType = 'image/jpeg' | 'image/png' | 'image/gif' | 'video/mp4';

/**
 * Processing result returned after event processing
 */
export type ProcessingResult = {
    eventId: string;
    hash: string;
    processedAt: string;
    storageLocation: string;
};

/**
 * Service health status breakdown
 */
export type ServiceHealthStatus = {
    storage: boolean;
};

export type PostApiV1EventsData = {
    requestBody: EventPackage;
};

export type PostApiV1EventsResponse = ProcessingResult;

export type PostApiV1EventsPackageData = {
    requestBody: EventPackage;
};

export type PostApiV1EventsPackageResponse = unknown;

export type PostApiV1EventsUploadData = {
    requestBody: EventPayload;
};

export type PostApiV1EventsUploadResponse = unknown;

export type GetApiV1EventsByHashVerifyData = {
    /**
     * SHA-256 hash of the event to verify
     */
    hash: string;
};

export type GetApiV1EventsByHashVerifyResponse = HashVerificationResponse;

export type GetHealthResponse = HealthResponse;

export type $OpenApiTs = {
    '/api/v1/events': {
        post: {
            req: PostApiV1EventsData;
            res: {
                /**
                 * Event processed successfully
                 */
                200: ProcessingResult;
                /**
                 * Bad request - validation failed
                 */
                400: unknown;
                /**
                 * Internal server error
                 */
                500: unknown;
            };
        };
    };
    '/api/v1/events/package': {
        post: {
            req: PostApiV1EventsPackageData;
            res: {
                /**
                 * Event package processed and stored successfully
                 */
                200: unknown;
                /**
                 * Bad request - validation failed
                 */
                400: unknown;
                /**
                 * Internal server error
                 */
                500: unknown;
            };
        };
    };
    '/api/v1/events/upload': {
        post: {
            req: PostApiV1EventsUploadData;
            res: {
                /**
                 * Upload notification received successfully
                 */
                200: unknown;
                /**
                 * Bad request - validation failed
                 */
                400: unknown;
            };
        };
    };
    '/api/v1/events/{hash}/verify': {
        get: {
            req: GetApiV1EventsByHashVerifyData;
            res: {
                /**
                 * Hash verification completed
                 */
                200: HashVerificationResponse;
                /**
                 * Bad request - invalid hash format
                 */
                400: unknown;
                /**
                 * Internal server error
                 */
                500: unknown;
            };
        };
    };
    '/health': {
        get: {
            res: {
                /**
                 * Service is healthy
                 */
                200: HealthResponse;
                /**
                 * Service is unhealthy
                 */
                503: unknown;
            };
        };
    };
};